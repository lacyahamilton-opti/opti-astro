---
import { Image as AstroImage } from 'astro:assets';
import type { Locales } from 'astro';
import { format } from 'date-fns';
import type { ArticlePageFragment } from '../../../../__generated/sdk';
import { getOptimizelySdk } from '../../../graphql/getSdk';
import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import Layout from '../../../layouts/Layout.astro';

export interface Props {
    contentPayload: ContentPayload;
}
const { contentPayload } = Astro.props as Props;

const optiResponse = await getOptimizelySdk(contentPayload).pageById({
    key: contentPayload.key,
    //@ts-ignore
    loc: contentPayload.loc as Locales,
    ver: contentPayload.ver,
});
const post = optiResponse?._Page?.item as ArticlePageFragment;
const publishedDate = format(
    new Date(post?._metadata?.published ?? Date.now()),
    'dd MMM yyyy'
);

const hierarchicalUrl = post?._metadata?.url?.type === "SIMPLE" ? post?._metadata?.url?.hierarchical : '';
---

<Layout
    title={post.SeoSettings?.MetaTitle ?? ''}
    description={post.SeoSettings?.MetaDescription ?? ''}
    contentPayload={contentPayload}
    hierarchicalUrl={hierarchicalUrl ?? ''}
>
    <div class="max-w-screen-6xl mx-auto">
        <main class="mt-10">
            <div
                class="relative mx-auto mb-4 w-full max-w-screen-xl md:mb-0"
                style="height: 24em;"
            >
                { ((post.PromoImage as any)?.item?.Url || post.PromoImage?.url?.default) && 
                    <div
                        class="absolute bottom-0 left-0 z-10 h-full w-full"
                        style="background-image: linear-gradient(180deg,transparent,rgba(0,0,0,.7));"
                    >
                    </div>
                    <AstroImage
                        src={(post.PromoImage as any)?.item?.Url || post.PromoImage?.url?.default}
                        class="absolute top-0 left-0 z-0 h-full w-full object-cover"
                        data-epi-property-name="BlogPostPromoImage"
                        alt={(post.PromoImage as any)?.item?.AltText || (post.PromoImage as any)?.item?._metadata?.displayName || post.Heading || 'Article promo image'}
                        inferSize={true}
                    />
                }
                <div class="absolute bottom-0 left-0 z-20 p-4">
                    <!--<a href="#"-->
                    <!--   class="px-4 py-1 bg-black text-gray-200 inline-flex items-center justify-center mb-2">Nutrition</a>-->
                    <h1
                        class="text-4xl leading-tight font-semibold text-gray-100"
                        data-epi-property-name="Heading"
                    >
                        {post?.Heading}
                    </h1>
                    <h2
                        class="text-base leading-tight font-semibold text-gray-100"
                        data-epi-property-name="Heading"
                    >
                        {post?.SubHeading}
                    </h2>
                    <div class="mt-3 flex">
                        <div>
                            <p class="text-sm font-semibold text-gray-200">
                                {post?.Author}
                            </p>
                            <p class="text-xs font-semibold text-gray-400">
                                {publishedDate}
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <div
                class="mx-auto mt-12 max-w-screen-xl px-4 font-sans text-lg leading-relaxed text-gray-700 lg:px-0"
                data-epi-property-name="BlogPostBody"
                set:html={post.Body?.html}
            />
        </main>
    </div>
</Layout>
